Labeled {nodeId = NodeId {unNodeId = 4}, unLabel = Module {moduleDecls = [Labeled {nodeId = NodeId {unNodeId = 3}, unLabel = FunBind (Labeled {nodeId = NodeId {unNodeId = 0}, unLabel = Ident {unIdent = "Q"}, srcLoc = TokSpan (TokenId {unTokenId = 0}) (TokenId {unTokenId = 0})}) [FunCase [[Labeled {nodeId = NodeId {unNodeId = 1}, unLabel = EmptySetPat, srcLoc = TokSpan (TokenId {unTokenId = 2}) (TokenId {unTokenId = 3})}]] (Labeled {nodeId = NodeId {unNodeId = 2}, unLabel = Stop, srcLoc = TokSpan (TokenId {unTokenId = 6}) (TokenId {unTokenId = 6})})], srcLoc = TokSpan (TokenId {unTokenId = 0}) (TokenId {unTokenId = 0})}], moduleTokens = Just [Token {tokenId = TokenId {unTokenId = 0}, tokenStart = AlexPn 0 1 1, tokenLen = 1, tokenClass = LIdent, tokenString = "Q"},Token {tokenId = TokenId {unTokenId = 1}, tokenStart = AlexPn 1 1 2, tokenLen = 1, tokenClass = LCspsym, tokenString = "("},Token {tokenId = TokenId {unTokenId = 2}, tokenStart = AlexPn 2 1 3, tokenLen = 1, tokenClass = LCspsym, tokenString = "{"},Token {tokenId = TokenId {unTokenId = 3}, tokenStart = AlexPn 3 1 4, tokenLen = 1, tokenClass = LCspsym, tokenString = "}"},Token {tokenId = TokenId {unTokenId = 4}, tokenStart = AlexPn 4 1 5, tokenLen = 1, tokenClass = LCspsym, tokenString = ")"},Token {tokenId = TokenId {unTokenId = 5}, tokenStart = AlexPn 6 1 7, tokenLen = 1, tokenClass = LCspsym, tokenString = "="},Token {tokenId = TokenId {unTokenId = 6}, tokenStart = AlexPn 8 1 9, tokenLen = 4, tokenClass = LCspId, tokenString = "STOP"}]}, srcLoc = TokSpan (TokenId {unTokenId = 0}) (TokenId {unTokenId = 6})}