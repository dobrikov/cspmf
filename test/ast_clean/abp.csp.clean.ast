(Module ((:) (PatBind (VarPat (Ident "DATA")) (SetEnum ((:) (IntExp (2)) ((:) (IntExp (3)) ([]))))) ((:) (Channel ((:) (Ident "left") ((:) (Ident "right") ([]))) (Just (TypeDot ((:) (Var (Ident "DATA")) ([]))))) ((:) (Channel ((:) (Ident "a") ((:) (Ident "b") ([]))) (Just (TypeDot ((:) (BoolSet) ((:) (Var (Ident "DATA")) ([])))))) ((:) (Channel ((:) (Ident "c") ((:) (Ident "d") ([]))) (Just (TypeDot ((:) (BoolSet) ([]))))) ((:) (PatBind (VarPat (Ident "SPEC")) (Let ((:) (FunBind (Ident "BUFF") ((:) (FunCase ((:) ((:) (VarPat (Ident "s")) ((:) (VarPat (Ident "N")) ([]))) ([])) (Ifte (CallBuiltIn (BuiltIn (F_null)) ((:) ((:) (Var (Ident "s")) ([])) ([]))) (PrefixExp (Var (Ident "left")) ((:) (InComm (VarPat (Ident "x"))) ([])) (CallFunction (Var (Ident "BUFF")) ((:) ((:) (ListEnum ((:) (Var (Ident "x")) ([]))) ((:) (Var (Ident "N")) ([]))) ([])))) (Fun2 (BuiltIn (F_ExtChoice)) (PrefixExp (Var (Ident "right")) ((:) (OutComm (CallBuiltIn (BuiltIn (F_head)) ((:) ((:) (Var (Ident "s")) ([])) ([])))) ([])) (CallFunction (Var (Ident "BUFF")) ((:) ((:) (CallBuiltIn (BuiltIn (F_tail)) ((:) ((:) (Var (Ident "s")) ([])) ([]))) ((:) (Var (Ident "N")) ([]))) ([])))) (Fun2 (BuiltIn (F_Guard)) (Fun2 (BuiltIn (F_LT)) (Fun1 (BuiltIn (F_Len2)) (Var (Ident "s"))) (Var (Ident "N"))) (Parens (Fun2 (BuiltIn (F_IntChoice)) (Stop) (PrefixExp (Var (Ident "left")) ((:) (InComm (VarPat (Ident "x2"))) ([])) (CallFunction (Var (Ident "BUFF")) ((:) ((:) (Fun2 (BuiltIn (F_Concat)) (Var (Ident "s")) (ListEnum ((:) (Var (Ident "x2")) ([])))) ((:) (Var (Ident "N")) ([]))) ([])))))))))) ([]))) ([])) (CallFunction (Var (Ident "BUFF")) ((:) ((:) (ListEnum ([])) ((:) (IntExp (3)) ([]))) ([]))))) ((:) (FunBind (Ident "lossy_buffer") ((:) (FunCase ((:) ((:) (VarPat (Ident "in")) ((:) (VarPat (Ident "out")) ((:) (VarPat (Ident "bound")) ([])))) ([])) (Let ((:) (FunBind (Ident "B") ((:) (FunCase ((:) ((:) (IntPat (0)) ([])) ([])) (PrefixExp (Var (Ident "in")) ((:) (InComm (VarPat (Ident "x3"))) ([])) (PrefixExp (Var (Ident "out")) ((:) (OutComm (Var (Ident "x3"))) ([])) (CallFunction (Var (Ident "B")) ((:) ((:) (Fun2 (BuiltIn (F_Sub)) (Var (Ident "bound")) (IntExp (1))) ([])) ([])))))) ((:) (FunCase ((:) ((:) (VarPat (Ident "n")) ([])) ([])) (PrefixExp (Var (Ident "in")) ((:) (InComm (VarPat (Ident "x4"))) ([])) (Parens (Fun2 (BuiltIn (F_IntChoice)) (CallFunction (Var (Ident "B")) ((:) ((:) (Fun2 (BuiltIn (F_Sub)) (Var (Ident "n")) (IntExp (1))) ([])) ([]))) (PrefixExp (Var (Ident "out")) ((:) (OutComm (Var (Ident "x4"))) ([])) (CallFunction (Var (Ident "B")) ((:) ((:) (Fun2 (BuiltIn (F_Sub)) (Var (Ident "bound")) (IntExp (1))) ([])) ([])))))))) ([])))) ([])) (CallFunction (Var (Ident "B")) ((:) ((:) (Fun2 (BuiltIn (F_Sub)) (Var (Ident "bound")) (IntExp (1))) ([])) ([]))))) ([]))) ((:) (PatBind (VarPat (Ident "PUT")) (CallFunction (Var (Ident "lossy_buffer")) ((:) ((:) (Var (Ident "a")) ((:) (Var (Ident "b")) ((:) (IntExp (3)) ([])))) ([])))) ((:) (PatBind (VarPat (Ident "GET")) (CallFunction (Var (Ident "lossy_buffer")) ((:) ((:) (Var (Ident "c")) ((:) (Var (Ident "d")) ((:) (IntExp (3)) ([])))) ([])))) ((:) (PatBind (VarPat (Ident "SEND")) (Let ((:) (PatBind (VarPat (Ident "Null")) (IntExp (99))) ((:) (FunBind (Ident "S") ((:) (FunCase ((:) ((:) (VarPat (Ident "v")) ((:) (VarPat (Ident "bit")) ([]))) ([])) (Fun2 (BuiltIn (F_ExtChoice)) (Parens (Ifte (Fun2 (BuiltIn (F_Eq)) (Var (Ident "v")) (Var (Ident "Null"))) (PrefixExp (Var (Ident "left")) ((:) (InComm (VarPat (Ident "x5"))) ([])) (CallFunction (Var (Ident "S")) ((:) ((:) (Var (Ident "x5")) ((:) (NotExp (Var (Ident "bit"))) ([]))) ([])))) (PrefixExp (Var (Ident "a")) ((:) (OutComm (Var (Ident "bit"))) ((:) (OutComm (Var (Ident "v"))) ([]))) (CallFunction (Var (Ident "S")) ((:) ((:) (Var (Ident "v")) ((:) (Var (Ident "bit")) ([]))) ([])))))) (PrefixExp (Var (Ident "d")) ((:) (InComm (VarPat (Ident "ack"))) ([])) (CallFunction (Var (Ident "S")) ((:) ((:) (Ifte (Fun2 (BuiltIn (F_Eq)) (Var (Ident "ack")) (Var (Ident "bit"))) (Var (Ident "Null")) (Var (Ident "v"))) ((:) (Var (Ident "bit")) ([]))) ([])))))) ([]))) ([]))) (CallFunction (Var (Ident "S")) ((:) ((:) (Var (Ident "Null")) ((:) (CTrue) ([]))) ([]))))) ((:) (PatBind (VarPat (Ident "RECV")) (Let ((:) (FunBind (Ident "R") ((:) (FunCase ((:) ((:) (VarPat (Ident "bit2")) ([])) ([])) (Fun2 (BuiltIn (F_ExtChoice)) (PrefixExp (Var (Ident "b")) ((:) (InComm (VarPat (Ident "tag"))) ((:) (InComm (VarPat (Ident "data"))) ([]))) (Parens (Ifte (Fun2 (BuiltIn (F_Eq)) (Var (Ident "tag")) (Var (Ident "bit2"))) (PrefixExp (Var (Ident "right")) ((:) (OutComm (Var (Ident "data"))) ([])) (CallFunction (Var (Ident "R")) ((:) ((:) (NotExp (Var (Ident "bit2"))) ([])) ([])))) (CallFunction (Var (Ident "R")) ((:) ((:) (Var (Ident "bit2")) ([])) ([])))))) (PrefixExp (Var (Ident "c")) ((:) (OutComm (NotExp (Var (Ident "bit2")))) ([])) (CallFunction (Var (Ident "R")) ((:) ((:) (Var (Ident "bit2")) ([])) ([])))))) ([]))) ([])) (CallFunction (Var (Ident "R")) ((:) ((:) (CFalse) ([])) ([]))))) ((:) (FunBind (Ident "make_system") ((:) (FunCase ((:) ((:) (VarPat (Ident "receiver")) ([])) ([])) (CallFunction (Var (Ident "make_full_system")) ((:) ((:) (Var (Ident "SEND")) ((:) (Fun2 (BuiltIn (F_Interleave)) (Var (Ident "PUT")) (Var (Ident "GET"))) ((:) (Var (Ident "receiver")) ([])))) ([])))) ([]))) ((:) (FunBind (Ident "make_full_system") ((:) (FunCase ((:) ((:) (VarPat (Ident "sender")) ((:) (VarPat (Ident "wiring")) ((:) (VarPat (Ident "receiver2")) ([])))) ([])) (Fun2 (BuiltIn (F_Hiding)) (ProcSharing (Closure ((:) (Var (Ident "a")) ((:) (Var (Ident "d")) ([])))) (Var (Ident "sender")) (Parens (ProcSharing (Closure ((:) (Var (Ident "b")) ((:) (Var (Ident "c")) ([])))) (Var (Ident "wiring")) (Var (Ident "receiver2"))))) (Closure ((:) (Var (Ident "a")) ((:) (Var (Ident "b")) ((:) (Var (Ident "c")) ((:) (Var (Ident "d")) ([])))))))) ([]))) ((:) (PatBind (VarPat (Ident "DIVSYSTEM")) (CallFunction (Var (Ident "make_system")) ((:) ((:) (Var (Ident "RECV")) ([])) ([])))) ((:) (AssertBool (Var (Ident "DIVSYSTEM"))) ((:) (PatBind (VarPat (Ident "ALT")) (PrefixExp (Var (Ident "b")) ((:) (InComm (WildCard)) ([])) (PrefixExp (Var (Ident "c")) ((:) (InComm (WildCard)) ([])) (Var (Ident "ALT"))))) ((:) (FunBind (Ident "LIMIT") ((:) (FunCase ((:) ((:) (VarPat (Ident "M")) ([])) ([])) (Let ((:) (FunBind (Ident "L") ((:) (FunCase ((:) ((:) (VarPat (Ident "bs")) ((:) (VarPat (Ident "cs")) ([]))) ([])) (Fun2 (BuiltIn (F_ExtChoice)) (Fun2 (BuiltIn (F_Guard)) (Fun2 (BuiltIn (F_LT)) (Var (Ident "bs")) (Var (Ident "M"))) (PrefixExp (Var (Ident "b")) ((:) (InComm (WildCard)) ([])) (CallFunction (Var (Ident "L")) ((:) ((:) (Fun2 (BuiltIn (F_Add)) (Var (Ident "bs")) (IntExp (1))) ((:) (IntExp (0)) ([]))) ([]))))) (Fun2 (BuiltIn (F_Guard)) (Fun2 (BuiltIn (F_LT)) (Var (Ident "cs")) (Var (Ident "M"))) (PrefixExp (Var (Ident "c")) ((:) (InComm (WildCard)) ([])) (CallFunction (Var (Ident "L")) ((:) ((:) (IntExp (0)) ((:) (Fun2 (BuiltIn (F_Add)) (Var (Ident "cs")) (IntExp (1))) ([]))) ([]))))))) ([]))) ([])) (CallFunction (Var (Ident "L")) ((:) ((:) (IntExp (0)) ((:) (IntExp (0)) ([]))) ([]))))) ([]))) ((:) (FunBind (Ident "NDC") ((:) (FunCase ((:) ((:) (VarPat (Ident "M2")) ([])) ([])) (Let ((:) (FunBind (Ident "C") ((:) (FunCase ((:) ((:) (VarPat (Ident "n2")) ([])) ([])) (Ifte (Fun2 (BuiltIn (F_Eq)) (Var (Ident "n2")) (IntExp (0))) (PrefixExp (Var (Ident "c")) ((:) (InComm (WildCard)) ([])) (CallFunction (Var (Ident "C")) ((:) ((:) (Fun2 (BuiltIn (F_Add)) (Var (Ident "n2")) (IntExp (1))) ([])) ([])))) (Ifte (Fun2 (BuiltIn (F_Eq)) (Var (Ident "n2")) (Var (Ident "M2"))) (PrefixExp (Var (Ident "b")) ((:) (InComm (WildCard)) ([])) (CallFunction (Var (Ident "C")) ((:) ((:) (Fun2 (BuiltIn (F_Sub)) (Var (Ident "n2")) (IntExp (1))) ([])) ([])))) (Fun2 (BuiltIn (F_IntChoice)) (PrefixExp (Var (Ident "c")) ((:) (InComm (WildCard)) ([])) (CallFunction (Var (Ident "C")) ((:) ((:) (Fun2 (BuiltIn (F_Add)) (Var (Ident "n2")) (IntExp (1))) ([])) ([])))) (PrefixExp (Var (Ident "b")) ((:) (InComm (WildCard)) ([])) (CallFunction (Var (Ident "C")) ((:) ((:) (Fun2 (BuiltIn (F_Sub)) (Var (Ident "n2")) (IntExp (1))) ([])) ([])))))))) ([]))) ([])) (CallFunction (Var (Ident "C")) ((:) ((:) (Fun2 (BuiltIn (F_Div)) (Var (Ident "M2")) (IntExp (2))) ([])) ([]))))) ([]))) ((:) (FunBind (Ident "modify_receiver") ((:) (FunCase ((:) ((:) (VarPat (Ident "constraint")) ([])) ([])) (ProcSharing (Closure ((:) (Var (Ident "b")) ((:) (Var (Ident "c")) ([])))) (Var (Ident "RECV")) (Var (Ident "constraint")))) ([]))) ((:) (PatBind (VarPat (Ident "RCVA")) (CallFunction (Var (Ident "modify_receiver")) ((:) ((:) (Var (Ident "ALT")) ([])) ([])))) ((:) (PatBind (VarPat (Ident "RCVL")) (CallFunction (Var (Ident "modify_receiver")) ((:) ((:) (CallFunction (Var (Ident "LIMIT")) ((:) ((:) (IntExp (3)) ([])) ([]))) ([])) ([])))) ((:) (PatBind (VarPat (Ident "RCVN")) (CallFunction (Var (Ident "modify_receiver")) ((:) ((:) (CallFunction (Var (Ident "NDC")) ((:) ((:) (IntExp (4)) ([])) ([]))) ([])) ([])))) ((:) (AssertRef (Var (Ident "SPEC")) "k" (CallFunction (Var (Ident "make_system")) ((:) ((:) (Var (Ident "RCVA")) ([])) ([])))) ((:) (AssertRef (Var (Ident "SPEC")) "k" (CallFunction (Var (Ident "make_system")) ((:) ((:) (Var (Ident "RCVL")) ([])) ([])))) ((:) (AssertRef (Var (Ident "SPEC")) "k" (CallFunction (Var (Ident "make_system")) ((:) ((:) (Var (Ident "RCVN")) ([])) ([])))) ((:) (PatBind (VarPat (Ident "RCVimp")) (Let ((:) (FunBind (Ident "R2") ((:) (FunCase ((:) ((:) (VarPat (Ident "bit3")) ([])) ([])) (PrefixExp (Var (Ident "b")) ((:) (InComm (VarPat (Ident "tag2"))) ((:) (InComm (VarPat (Ident "data2"))) ([]))) (Ifte (Fun2 (BuiltIn (F_Eq)) (Var (Ident "tag2")) (Var (Ident "bit3"))) (PrefixExp (Var (Ident "right")) ((:) (OutComm (Var (Ident "data2"))) ([])) (PrefixExp (Var (Ident "c")) ((:) (OutComm (Var (Ident "tag2"))) ([])) (CallFunction (Var (Ident "R2")) ((:) ((:) (NotExp (Var (Ident "bit3"))) ([])) ([]))))) (PrefixExp (Var (Ident "c")) ((:) (OutComm (Var (Ident "tag2"))) ([])) (CallFunction (Var (Ident "R2")) ((:) ((:) (Var (Ident "bit3")) ([])) ([]))))))) ([]))) ([])) (CallFunction (Var (Ident "R2")) ((:) ((:) (CFalse) ([])) ([]))))) ((:) (AssertRef (Var (Ident "RCVN")) "k" (Var (Ident "RCVimp"))) ((:) (AssertRef (Var (Ident "SPEC")) "k" (CallFunction (Var (Ident "make_system")) ((:) ((:) (Var (Ident "RCVimp")) ([])) ([])))) ((:) (AssertRef (Var (Ident "RCVimp")) "k" (Var (Ident "RCVA"))) ((:) (AssertRef (Var (Ident "RCVA")) "k" (Var (Ident "RCVimp"))) ((:) (FunBind (Ident "LIVCH") ((:) (FunCase ((:) ((:) (VarPat (Ident "in2")) ((:) (VarPat (Ident "out2")) ([]))) ([])) (Let ((:) (PatBind (VarPat (Ident "P")) (Fun2 (BuiltIn (F_IntChoice)) (PrefixExp (Var (Ident "in2")) ((:) (InComm (WildCard)) ([])) (Var (Ident "P"))) (ProcRepInternalChoice ((:) (Generator (VarPat (Ident "x6")) (Closure ((:) (Var (Ident "out2")) ([])))) ([])) (PrefixExp (Var (Ident "x6")) ([]) (Var (Ident "P")))))) ([])) (Var (Ident "P")))) ([]))) ((:) (AssertRef (CallFunction (Var (Ident "LIVCH")) ((:) ((:) (Var (Ident "a")) ((:) (Var (Ident "b")) ([]))) ([]))) "k" (Var (Ident "PUT"))) ((:) (AssertRef (CallFunction (Var (Ident "LIVCH")) ((:) ((:) (Var (Ident "c")) ((:) (Var (Ident "d")) ([]))) ([]))) "k" (Var (Ident "GET"))) ((:) (PatBind (VarPat (Ident "ND")) (Fun2 (BuiltIn (F_IntChoice)) (PrefixExp (Var (Ident "b")) ((:) (InComm (WildCard)) ([])) (Var (Ident "ND"))) (PrefixExp (Var (Ident "c")) ((:) (InComm (WildCard)) ([])) (Var (Ident "ND"))))) ((:) (PatBind (VarPat (Ident "RCVG")) (CallFunction (Var (Ident "modify_receiver")) ((:) ((:) (Var (Ident "ND")) ([])) ([])))) ((:) (PatBind (VarPat (Ident "GSYSTEM")) (CallFunction (Var (Ident "make_system")) ((:) ((:) (Var (Ident "RCVG")) ([])) ([])))) ((:) (AssertRef (Var (Ident "SPEC")) "k" (Var (Ident "GSYSTEM"))) ((:) (AssertRef (Var (Ident "SPEC")) "k" (Var (Ident "GSYSTEM"))) ((:) (PatBind (VarPat (Ident "PUT'")) (PrefixExp (Var (Ident "a")) ((:) (InComm (VarPat (Ident "tag3"))) ((:) (InComm (VarPat (Ident "data3"))) ([]))) (Parens (Fun2 (BuiltIn (F_IntChoice)) (PrefixExp (Var (Ident "b")) ((:) (OutComm (Var (Ident "tag3"))) ((:) (OutComm (Var (Ident "data3"))) ([]))) (Var (Ident "PUT'"))) (Var (Ident "PUT'")))))) ((:) (PatBind (VarPat (Ident "GET'")) (PrefixExp (Var (Ident "c")) ((:) (InComm (VarPat (Ident "tag4"))) ([])) (Parens (Fun2 (BuiltIn (F_IntChoice)) (PrefixExp (Var (Ident "d")) ((:) (OutComm (Var (Ident "tag4"))) ([])) (Var (Ident "GET'"))) (Var (Ident "GET'")))))) ((:) (PatBind (VarPat (Ident "FSYSTEM")) (CallFunction (Var (Ident "make_full_system")) ((:) ((:) (Var (Ident "SEND")) ((:) (Fun2 (BuiltIn (F_Interleave)) (Var (Ident "PUT'")) (Var (Ident "GET'"))) ((:) (Var (Ident "RCVA")) ([])))) ([])))) ((:) (AssertRef (Var (Ident "SPEC")) "k" (Var (Ident "FSYSTEM"))) ([])))))))))))))))))))))))))))))))))))))))))) (Nothing))