(Module ((:) (Channel ((:) (Ident "tock") ([])) (Nothing)) ((:) (DataType (Ident "GateControl") ((:) (Constructor (Ident "go_down") (Nothing)) ((:) (Constructor (Ident "go_up") (Nothing)) ((:) (Constructor (Ident "up") (Nothing)) ((:) (Constructor (Ident "down") (Nothing)) ([])))))) ((:) (Channel ((:) (Ident "gate") ([])) (Just (TypeDot ((:) (Var (Ident "GateControl")) ([]))))) ((:) (Channel ((:) (Ident "error") ([])) (Nothing)) ((:) (PatBind (VarPat (Ident "Segments")) (IntExp (5))) ((:) (PatBind (VarPat (Ident "LastSeg")) (Fun2 (BuiltIn (F_Sub)) (Var (Ident "Segments")) (IntExp (1)))) ((:) (PatBind (VarPat (Ident "TRACKS")) (SetClose ((,) (IntExp (0)) (Var (Ident "LastSeg"))))) ((:) (PatBind (VarPat (Ident "REALTRACKS")) (SetClose ((,) (IntExp (1)) (Var (Ident "LastSeg"))))) ((:) (PatBind (VarPat (Ident "GateSeg")) (IntExp (3))) ((:) (DataType (Ident "TRAINS") ((:) (Constructor (Ident "Thomas") (Nothing)) ((:) (Constructor (Ident "Gordon") (Nothing)) ([])))) ((:) (Channel ((:) (Ident "enter") ((:) (Ident "leave") ([]))) (Just (TypeDot ((:) (Var (Ident "TRACKS")) ((:) (Var (Ident "TRAINS")) ([])))))) ((:) (DataType (Ident "sensed") ((:) (Constructor (Ident "in") (Nothing)) ((:) (Constructor (Ident "out") (Nothing)) ([])))) ((:) (Channel ((:) (Ident "sensor") ([])) (Just (TypeDot ((:) (Var (Ident "sensed")) ([]))))) ((:) (FunBind (Ident "Train") ((:) (FunCase ((:) ((:) (VarPat (Ident "A")) ((:) (VarPat (Ident "j")) ([]))) ([])) (PrefixExp (Var (Ident "enter")) ((:) (OutComm (Parens (Fun2 (BuiltIn (F_Mod)) (Parens (Fun2 (BuiltIn (F_Add)) (Var (Ident "j")) (IntExp (1)))) (Var (Ident "Segments"))))) ((:) (OutComm (Var (Ident "A"))) ([]))) (PrefixExp (Var (Ident "leave")) ((:) (OutComm (Var (Ident "j"))) ((:) (OutComm (Var (Ident "A"))) ([]))) (CallFunction (Var (Ident "Train")) ((:) ((:) (Var (Ident "A")) ((:) (Fun2 (BuiltIn (F_Mod)) (Parens (Fun2 (BuiltIn (F_Add)) (Var (Ident "j")) (IntExp (1)))) (Var (Ident "Segments"))) ([]))) ([])))))) ([]))) ((:) (PatBind (VarPat (Ident "Trains")) (Fun2 (BuiltIn (F_Interleave)) (CallFunction (Var (Ident "Train")) ((:) ((:) (Var (Ident "Thomas")) ((:) (IntExp (0)) ([]))) ([]))) (CallFunction (Var (Ident "Train")) ((:) ((:) (Var (Ident "Gordon")) ((:) (IntExp (0)) ([]))) ([]))))) ((:) (FunBind (Ident "Track") ((:) (FunCase ((:) ((:) (VarPat (Ident "j2")) ([])) ([])) (Let ((:) (PatBind (VarPat (Ident "Empty")) (PrefixExp (Var (Ident "enter")) ((:) (OutComm (Var (Ident "j2"))) ((:) (InComm (VarPat (Ident "A2"))) ([]))) (Ifte (Fun2 (BuiltIn (F_Eq)) (Var (Ident "j2")) (IntExp (1))) (PrefixExp (Var (Ident "sensor")) ((:) (OutComm (Var (Ident "in"))) ([])) (CallFunction (Var (Ident "Full")) ((:) ((:) (Var (Ident "A2")) ([])) ([])))) (CallFunction (Var (Ident "Full")) ((:) ((:) (Var (Ident "A2")) ([])) ([])))))) ((:) (FunBind (Ident "Full") ((:) (FunCase ((:) ((:) (VarPat (Ident "A3")) ([])) ([])) (PrefixExp (Var (Ident "leave")) ((:) (OutComm (Var (Ident "j2"))) ((:) (OutComm (Var (Ident "A3"))) ([]))) (Ifte (Fun2 (BuiltIn (F_Eq)) (Var (Ident "j2")) (Var (Ident "GateSeg"))) (PrefixExp (Var (Ident "sensor")) ((:) (OutComm (Var (Ident "out"))) ([])) (Var (Ident "Empty"))) (Var (Ident "Empty"))))) ([]))) ([]))) (Var (Ident "Empty")))) ([]))) ((:) (PatBind (VarPat (Ident "Tracks")) (ProcRepInterleave ((:) (Generator (VarPat (Ident "j3")) (Var (Ident "REALTRACKS"))) ([])) (CallFunction (Var (Ident "Track")) ((:) ((:) (Var (Ident "j3")) ([])) ([]))))) ((:) (PatBind (VarPat (Ident "Network")) (ProcSharing (ClosureComprehension ((,) ((:) (DotTuple ((:) (Var (Ident "enter")) ((:) (Var (Ident "j4")) ([])))) ((:) (DotTuple ((:) (Var (Ident "leave")) ((:) (Var (Ident "j4")) ([])))) ([]))) ((:) (Generator (VarPat (Ident "j4")) (Var (Ident "REALTRACKS"))) ([])))) (Var (Ident "Trains")) (Var (Ident "Tracks")))) ((:) (PatBind (VarPat (Ident "SlowTrain")) (IntExp (4))) ((:) (PatBind (VarPat (Ident "NormalTrain")) (IntExp (3))) ((:) (PatBind (VarPat (Ident "FastTrain")) (IntExp (2))) ((:) (PatBind (VarPat (Ident "MaxTocksPerSeg")) (IntExp (6))) ((:) (FunBind (Ident "SpeedReg") ((:) (FunCase ((:) ((:) (VarPat (Ident "j5")) ((:) (VarPat (Ident "MinTocksPerSeg")) ([]))) ([])) (Let ((:) (PatBind (VarPat (Ident "Empty2")) (Fun2 (BuiltIn (F_ExtChoice)) (PrefixExp (Var (Ident "enter")) ((:) (OutComm (Var (Ident "j5"))) ((:) (InComm (VarPat (Ident "A4"))) ([]))) (CallFunction (Var (Ident "Full2")) ((:) ((:) (IntExp (0)) ([])) ([])))) (PrefixExp (Var (Ident "tock")) ([]) (Var (Ident "Empty2"))))) ((:) (FunBind (Ident "Full2") ((:) (FunCase ((:) ((:) (VarPat (Ident "n")) ([])) ([])) (Fun2 (BuiltIn (F_ExtChoice)) (Fun2 (BuiltIn (F_Guard)) (Fun2 (BuiltIn (F_LT)) (Var (Ident "n")) (Var (Ident "MaxTocksPerSeg"))) (PrefixExp (Var (Ident "tock")) ([]) (CallFunction (Var (Ident "Full2")) ((:) ((:) (Fun2 (BuiltIn (F_Add)) (Var (Ident "n")) (IntExp (1))) ([])) ([]))))) (Fun2 (BuiltIn (F_Guard)) (Fun2 (BuiltIn (F_LE)) (Var (Ident "MinTocksPerSeg")) (Var (Ident "n"))) (PrefixExp (Var (Ident "enter")) ((:) (OutComm (Fun2 (BuiltIn (F_Mod)) (Parens (Fun2 (BuiltIn (F_Add)) (Var (Ident "j5")) (IntExp (1)))) (Var (Ident "Segments")))) ((:) (InComm (VarPat (Ident "A5"))) ([]))) (Var (Ident "Empty2")))))) ([]))) ([]))) (Var (Ident "Empty2")))) ([]))) ((:) (PatBind (VarPat (Ident "InSensorTiming")) (Fun2 (BuiltIn (F_ExtChoice)) (PrefixExp (Var (Ident "tock")) ([]) (Var (Ident "InSensorTiming"))) (PrefixExp (Var (Ident "enter")) ((:) (OutComm (IntExp (1))) ((:) (InComm (VarPat (Ident "A6"))) ([]))) (PrefixExp (Var (Ident "sensor")) ((:) (OutComm (Var (Ident "in"))) ([])) (Var (Ident "InSensorTiming")))))) ((:) (PatBind (VarPat (Ident "OutSensorTiming")) (Fun2 (BuiltIn (F_ExtChoice)) (PrefixExp (Var (Ident "tock")) ([]) (Var (Ident "OutSensorTiming"))) (PrefixExp (Var (Ident "leave")) ((:) (OutComm (Var (Ident "GateSeg"))) ((:) (InComm (VarPat (Ident "A7"))) ([]))) (PrefixExp (Var (Ident "sensor")) ((:) (OutComm (Var (Ident "out"))) ([])) (Var (Ident "OutSensorTiming")))))) ((:) (FunBind (Ident "SpeedRegs") ((:) (FunCase ((:) ((:) (VarPat (Ident "min")) ([])) ([])) (Stop)) ([]))) ((:) (PatBind (VarPat (Ident "SensorTiming")) (ProcSharing (Closure ((:) (Var (Ident "tock")) ([]))) (Var (Ident "InSensorTiming")) (Var (Ident "OutSensorTiming")))) ((:) (FunBind (Ident "NetworkTiming") ((:) (FunCase ((:) ((:) (VarPat (Ident "min2")) ([])) ([])) (ProcSharing (Closure ((:) (Var (Ident "tock")) ((:) (DotTuple ((:) (Var (Ident "enter")) ((:) (IntExp (1)) ([])))) ([])))) (CallFunction (Var (Ident "SpeedRegs")) ((:) ((:) (Var (Ident "min2")) ([])) ([]))) (Var (Ident "SensorTiming")))) ([]))) ((:) (FunBind (Ident "TimedNetwork") ((:) (FunCase ((:) ((:) (VarPat (Ident "min3")) ([])) ([])) (ProcSharing (Closure ((:) (Var (Ident "enter")) ((:) (Var (Ident "sensor")) ((:) (DotTuple ((:) (Var (Ident "leave")) ((:) (Var (Ident "GateSeg")) ([])))) ([]))))) (Var (Ident "Network")) (CallFunction (Var (Ident "NetworkTiming")) ((:) ((:) (Var (Ident "min3")) ([])) ([]))))) ([]))) ((:) (PatBind (VarPat (Ident "Controller")) (Let ((:) (PatBind (VarPat (Ident "ControllerUp")) (Fun2 (BuiltIn (F_ExtChoice)) (Fun2 (BuiltIn (F_ExtChoice)) (PrefixExp (Var (Ident "sensor")) ((:) (OutComm (Var (Ident "in"))) ([])) (PrefixExp (Var (Ident "gate")) ((:) (OutComm (Var (Ident "go_down"))) ([])) (CallFunction (Var (Ident "ControllerGoingDown")) ((:) ((:) (IntExp (1)) ([])) ([]))))) (PrefixExp (Var (Ident "sensor")) ((:) (OutComm (Var (Ident "out"))) ([])) (Var (Ident "ERROR")))) (PrefixExp (Var (Ident "tock")) ([]) (Var (Ident "ControllerUp"))))) ((:) (FunBind (Ident "ControllerGoingDown") ((:) (FunCase ((:) ((:) (VarPat (Ident "n2")) ([])) ([])) (Fun2 (BuiltIn (F_ExtChoice)) (Fun2 (BuiltIn (F_ExtChoice)) (Fun2 (BuiltIn (F_ExtChoice)) (Parens (Ifte (Fun2 (BuiltIn (F_LT)) (Var (Ident "GateSeg")) (Var (Ident "n2"))) (Var (Ident "ERROR")) (PrefixExp (Var (Ident "sensor")) ((:) (OutComm (Var (Ident "in"))) ([])) (CallFunction (Var (Ident "ControllerGoingDown")) ((:) ((:) (Fun2 (BuiltIn (F_Add)) (Var (Ident "n2")) (IntExp (1))) ([])) ([])))))) (PrefixExp (Var (Ident "gate")) ((:) (OutComm (Var (Ident "down"))) ([])) (CallFunction (Var (Ident "ControllerDown")) ((:) ((:) (Var (Ident "n2")) ([])) ([]))))) (PrefixExp (Var (Ident "tock")) ([]) (CallFunction (Var (Ident "ControllerGoingDown")) ((:) ((:) (Var (Ident "n2")) ([])) ([]))))) (PrefixExp (Var (Ident "sensor")) ((:) (OutComm (Var (Ident "out"))) ([])) (Var (Ident "ERROR"))))) ([]))) ((:) (FunBind (Ident "ControllerDown") ((:) (FunCase ((:) ((:) (VarPat (Ident "n3")) ([])) ([])) (Fun2 (BuiltIn (F_ExtChoice)) (Fun2 (BuiltIn (F_ExtChoice)) (Parens (Ifte (Fun2 (BuiltIn (F_LT)) (Var (Ident "GateSeg")) (Var (Ident "n3"))) (Var (Ident "ERROR")) (PrefixExp (Var (Ident "sensor")) ((:) (OutComm (Var (Ident "in"))) ([])) (CallFunction (Var (Ident "ControllerDown")) ((:) ((:) (Fun2 (BuiltIn (F_Add)) (Var (Ident "n3")) (IntExp (1))) ([])) ([])))))) (PrefixExp (Var (Ident "sensor")) ((:) (OutComm (Var (Ident "out"))) ([])) (Parens (Ifte (Fun2 (BuiltIn (F_Eq)) (Var (Ident "n3")) (IntExp (1))) (PrefixExp (Var (Ident "gate")) ((:) (OutComm (Var (Ident "go_up"))) ([])) (Var (Ident "ControllerGoingUp"))) (CallFunction (Var (Ident "ControllerDown")) ((:) ((:) (Fun2 (BuiltIn (F_Sub)) (Var (Ident "n3")) (IntExp (1))) ([])) ([]))))))) (PrefixExp (Var (Ident "tock")) ([]) (CallFunction (Var (Ident "ControllerDown")) ((:) ((:) (Var (Ident "n3")) ([])) ([])))))) ([]))) ((:) (PatBind (VarPat (Ident "ControllerGoingUp")) (Fun2 (BuiltIn (F_ExtChoice)) (Fun2 (BuiltIn (F_ExtChoice)) (Fun2 (BuiltIn (F_ExtChoice)) (PrefixExp (Var (Ident "gate")) ((:) (OutComm (Var (Ident "up"))) ([])) (Var (Ident "ControllerUp"))) (PrefixExp (Var (Ident "tock")) ([]) (Var (Ident "ControllerGoingUp")))) (PrefixExp (Var (Ident "sensor")) ((:) (OutComm (Var (Ident "in"))) ([])) (PrefixExp (Var (Ident "gate")) ((:) (OutComm (Var (Ident "go_down"))) ([])) (CallFunction (Var (Ident "ControllerGoingDown")) ((:) ((:) (IntExp (1)) ([])) ([])))))) (PrefixExp (Var (Ident "sensor")) ((:) (OutComm (Var (Ident "out"))) ([])) (Var (Ident "ERROR"))))) ([]))))) (Var (Ident "ControllerUp")))) ((:) (PatBind (VarPat (Ident "ERROR")) (PrefixExp (Var (Ident "error")) ([]) (Stop))) ((:) (PatBind (VarPat (Ident "VeryFastGate")) (IntExp (3))) ((:) (PatBind (VarPat (Ident "FastGate")) (IntExp (4))) ((:) (PatBind (VarPat (Ident "NormalGate")) (IntExp (5))) ((:) (PatBind (VarPat (Ident "SlowGate")) (IntExp (6))) ((:) (PatBind (VarPat (Ident "UpTime")) (IntExp (2))) ((:) (FunBind (Ident "Gate") ((:) (FunCase ((:) ((:) (VarPat (Ident "DownTime")) ([])) ([])) (Let ((:) (PatBind (VarPat (Ident "GateUp")) (Fun2 (BuiltIn (F_ExtChoice)) (Fun2 (BuiltIn (F_ExtChoice)) (PrefixExp (Var (Ident "gate")) ((:) (OutComm (Var (Ident "go_up"))) ([])) (Var (Ident "GateUp"))) (PrefixExp (Var (Ident "gate")) ((:) (OutComm (Var (Ident "go_down"))) ([])) (CallFunction (Var (Ident "GateGoingDown")) ((:) ((:) (IntExp (0)) ([])) ([]))))) (PrefixExp (Var (Ident "tock")) ([]) (Var (Ident "GateUp"))))) ((:) (FunBind (Ident "GateGoingDown") ((:) (FunCase ((:) ((:) (VarPat (Ident "n4")) ([])) ([])) (Fun2 (BuiltIn (F_ExtChoice)) (PrefixExp (Var (Ident "gate")) ((:) (OutComm (Var (Ident "go_down"))) ([])) (CallFunction (Var (Ident "GateGoingDown")) ((:) ((:) (Var (Ident "n4")) ([])) ([])))) (Ifte (Fun2 (BuiltIn (F_Eq)) (Var (Ident "n4")) (Var (Ident "DownTime"))) (PrefixExp (Var (Ident "gate")) ((:) (OutComm (Var (Ident "down"))) ([])) (Var (Ident "GateDown"))) (Fun2 (BuiltIn (F_IntChoice)) (PrefixExp (Var (Ident "gate")) ((:) (OutComm (Var (Ident "down"))) ([])) (Var (Ident "GateDown"))) (PrefixExp (Var (Ident "tock")) ([]) (CallFunction (Var (Ident "GateGoingDown")) ((:) ((:) (Fun2 (BuiltIn (F_Add)) (Var (Ident "n4")) (IntExp (1))) ([])) ([])))))))) ([]))) ((:) (PatBind (VarPat (Ident "GateDown")) (Fun2 (BuiltIn (F_ExtChoice)) (Fun2 (BuiltIn (F_ExtChoice)) (PrefixExp (Var (Ident "gate")) ((:) (OutComm (Var (Ident "go_down"))) ([])) (Var (Ident "GateDown"))) (PrefixExp (Var (Ident "gate")) ((:) (OutComm (Var (Ident "go_up"))) ([])) (CallFunction (Var (Ident "GateGoingUp")) ((:) ((:) (IntExp (0)) ([])) ([]))))) (PrefixExp (Var (Ident "tock")) ([]) (Var (Ident "GateDown"))))) ((:) (FunBind (Ident "GateGoingUp") ((:) (FunCase ((:) ((:) (VarPat (Ident "n5")) ([])) ([])) (Fun2 (BuiltIn (F_ExtChoice)) (Fun2 (BuiltIn (F_ExtChoice)) (PrefixExp (Var (Ident "gate")) ((:) (OutComm (Var (Ident "go_up"))) ([])) (CallFunction (Var (Ident "GateGoingUp")) ((:) ((:) (Var (Ident "n5")) ([])) ([])))) (PrefixExp (Var (Ident "gate")) ((:) (OutComm (Var (Ident "go_down"))) ([])) (CallFunction (Var (Ident "GateGoingDown")) ((:) ((:) (IntExp (0)) ([])) ([]))))) (Ifte (Fun2 (BuiltIn (F_Eq)) (Var (Ident "n5")) (Var (Ident "UpTime"))) (PrefixExp (Var (Ident "gate")) ((:) (OutComm (Var (Ident "up"))) ([])) (Var (Ident "GateUp"))) (Fun2 (BuiltIn (F_IntChoice)) (PrefixExp (Var (Ident "gate")) ((:) (OutComm (Var (Ident "up"))) ([])) (Var (Ident "GateUp"))) (PrefixExp (Var (Ident "tock")) ([]) (CallFunction (Var (Ident "GateGoingUp")) ((:) ((:) (Fun2 (BuiltIn (F_Add)) (Var (Ident "n5")) (IntExp (1))) ([])) ([])))))))) ([]))) ([]))))) (Var (Ident "GateUp")))) ([]))) ((:) (Transparent ((:) (Ident "sbisim") ([]))) ((:) (Transparent ((:) (Ident "normalise") ([]))) ((:) (Transparent ((:) (Ident "explicate") ([]))) ((:) (Transparent ((:) (Ident "diamond") ([]))) ((:) (FunBind (Ident "GateAndController") ((:) (FunCase ((:) ((:) (VarPat (Ident "dt")) ([])) ([])) (ProcSharing (Closure ((:) (Var (Ident "tock")) ((:) (Var (Ident "gate")) ([])))) (Var (Ident "Controller")) (CallFunction (Var (Ident "diamond")) ((:) ((:) (CallFunction (Var (Ident "Gate")) ((:) ((:) (Var (Ident "dt")) ([])) ([]))) ([])) ([]))))) ([]))) ((:) (FunBind (Ident "System") ((:) (FunCase ((:) ((:) (VarPat (Ident "invmaxspeed")) ((:) (VarPat (Ident "gatedowntime")) ([]))) ([])) (ProcSharing (Closure ((:) (Var (Ident "sensor")) ((:) (Var (Ident "tock")) ([])))) (CallFunction (Var (Ident "TimedNetwork")) ((:) ((:) (Var (Ident "invmaxspeed")) ([])) ([]))) (CallFunction (Var (Ident "GateAndController")) ((:) ((:) (Var (Ident "gatedowntime")) ([])) ([]))))) ([]))) ((:) (PatBind (VarPat (Ident "NoError")) (CallBuiltIn (BuiltIn (F_CHAOS)) ((:) ((:) (CallBuiltIn (BuiltIn (F_diff)) ((:) ((:) (Events) ((:) (Closure ((:) (Var (Ident "error")) ([]))) ([]))) ([]))) ([])) ([])))) ((:) (AssertRef (Var (Ident "NoError")) "k" (CallFunction (Var (Ident "System")) ((:) ((:) (Var (Ident "NormalTrain")) ((:) (Var (Ident "NormalGate")) ([]))) ([])))) ((:) (FunBind (Ident "SETBETWEENx") ((:) (FunCase ((:) ((:) (VarPat (Ident "EN")) ((:) (VarPat (Ident "DIS")) ((:) (VarPat (Ident "C")) ([])))) ([])) (Fun2 (BuiltIn (F_ExtChoice)) (Parens (ProcRepChoice ((:) (Generator (VarPat (Ident "x")) (Var (Ident "EN"))) ([])) (PrefixExp (Var (Ident "x")) ([]) (CallFunction (Var (Ident "SETOUTSIDEx")) ((:) ((:) (Var (Ident "DIS")) ((:) (Var (Ident "EN")) ((:) (Var (Ident "C")) ([])))) ([])))))) (Parens (ProcRepChoice ((:) (Generator (VarPat (Ident "x2")) (Var (Ident "DIS"))) ([])) (PrefixExp (Var (Ident "x2")) ([]) (CallFunction (Var (Ident "SETBETWEENx")) ((:) ((:) (Var (Ident "EN")) ((:) (Var (Ident "DIS")) ((:) (Var (Ident "C")) ([])))) ([])))))))) ([]))) ((:) (FunBind (Ident "SETOUTSIDEx") ((:) (FunCase ((:) ((:) (VarPat (Ident "DIS2")) ((:) (VarPat (Ident "EN2")) ((:) (VarPat (Ident "C2")) ([])))) ([])) (Fun2 (BuiltIn (F_ExtChoice)) (Fun2 (BuiltIn (F_ExtChoice)) (Parens (ProcRepChoice ((:) (Generator (VarPat (Ident "c")) (Var (Ident "C2"))) ([])) (PrefixExp (Var (Ident "c")) ([]) (CallFunction (Var (Ident "SETOUTSIDEx")) ((:) ((:) (Var (Ident "DIS2")) ((:) (Var (Ident "EN2")) ((:) (Var (Ident "C2")) ([])))) ([])))))) (Parens (ProcRepChoice ((:) (Generator (VarPat (Ident "x3")) (Var (Ident "EN2"))) ([])) (PrefixExp (Var (Ident "x3")) ([]) (CallFunction (Var (Ident "SETOUTSIDEx")) ((:) ((:) (Var (Ident "DIS2")) ((:) (Var (Ident "EN2")) ((:) (Var (Ident "C2")) ([])))) ([]))))))) (Parens (ProcRepChoice ((:) (Generator (VarPat (Ident "x4")) (Var (Ident "DIS2"))) ([])) (PrefixExp (Var (Ident "x4")) ([]) (CallFunction (Var (Ident "SETBETWEENx")) ((:) ((:) (Var (Ident "EN2")) ((:) (Var (Ident "DIS2")) ((:) (Var (Ident "C2")) ([])))) ([])))))))) ([]))) ((:) (PatBind (VarPat (Ident "EnterWhenDown")) (ProcSharing (Closure ((:) (Var (Ident "gate")) ((:) (DotTuple ((:) (Var (Ident "enter")) ((:) (Var (Ident "GateSeg")) ([])))) ([])))) (CallFunction (Var (Ident "SETBETWEENx")) ((:) ((:) (SetEnum ((:) (DotTuple ((:) (Var (Ident "gate")) ((:) (Var (Ident "down")) ([])))) ([]))) ((:) (SetEnum ((:) (DotTuple ((:) (Var (Ident "gate")) ((:) (Var (Ident "up")) ([])))) ((:) (DotTuple ((:) (Var (Ident "gate")) ((:) (Var (Ident "go_up")) ([])))) ((:) (DotTuple ((:) (Var (Ident "gate")) ((:) (Var (Ident "go_down")) ([])))) ([]))))) ((:) (SetEnum ((:) (DotTuple ((:) (Var (Ident "enter")) ((:) (Var (Ident "GateSeg")) ([])))) ([]))) ([])))) ([]))) (CallBuiltIn (BuiltIn (F_CHAOS)) ((:) ((:) (Events) ([])) ([]))))) ((:) (PatBind (VarPat (Ident "GateStillWhenTrain")) (ProcSharing (Closure ((:) (Var (Ident "gate")) ((:) (DotTuple ((:) (Var (Ident "enter")) ((:) (Var (Ident "GateSeg")) ([])))) ((:) (DotTuple ((:) (Var (Ident "leave")) ((:) (Var (Ident "GateSeg")) ([])))) ([]))))) (CallFunction (Var (Ident "SETOUTSIDEx")) ((:) ((:) (Closure ((:) (DotTuple ((:) (Var (Ident "enter")) ((:) (Var (Ident "GateSeg")) ([])))) ([]))) ((:) (Closure ((:) (DotTuple ((:) (Var (Ident "leave")) ((:) (Var (Ident "GateSeg")) ([])))) ([]))) ((:) (Closure ((:) (Var (Ident "gate")) ([]))) ([])))) ([]))) (CallBuiltIn (BuiltIn (F_CHAOS)) ((:) ((:) (Events) ([])) ([]))))) ((:) (PatBind (VarPat (Ident "Safety")) (ProcSharing (Events) (Var (Ident "EnterWhenDown")) (Var (Ident "GateStillWhenTrain")))) ((:) (AssertRef (Var (Ident "Safety")) "k" (CallFunction (Var (Ident "System")) ((:) ((:) (Var (Ident "SlowTrain")) ((:) (Var (Ident "NormalGate")) ([]))) ([])))) ((:) (AssertRef (Var (Ident "Safety")) "k" (CallFunction (Var (Ident "System")) ((:) ((:) (Var (Ident "NormalTrain")) ((:) (Var (Ident "NormalGate")) ([]))) ([])))) ((:) (AssertRef (Var (Ident "NoError")) "k" (CallFunction (Var (Ident "System")) ((:) ((:) (Var (Ident "FastTrain")) ((:) (Var (Ident "SlowGate")) ([]))) ([])))) ((:) (AssertRef (Var (Ident "Safety")) "k" (CallFunction (Var (Ident "System")) ((:) ((:) (Var (Ident "FastTrain")) ((:) (Var (Ident "NormalGate")) ([]))) ([])))) ((:) (AssertRef (Var (Ident "NoError")) "k" (CallFunction (Var (Ident "System")) ((:) ((:) (Var (Ident "FastTrain")) ((:) (Var (Ident "NormalGate")) ([]))) ([])))) ((:) (AssertRef (Var (Ident "Safety")) "k" (CallFunction (Var (Ident "System")) ((:) ((:) (Var (Ident "SlowTrain")) ((:) (Var (Ident "SlowGate")) ([]))) ([])))) ((:) (AssertRef (Var (Ident "Safety")) "k" (CallFunction (Var (Ident "System")) ((:) ((:) (Var (Ident "FastTrain")) ((:) (Var (Ident "FastGate")) ([]))) ([])))) ((:) (AssertRef (Var (Ident "Safety")) "k" (CallFunction (Var (Ident "System")) ((:) ((:) (Var (Ident "FastTrain")) ((:) (Var (Ident "VeryFastGate")) ([]))) ([])))) ((:) (PatBind (VarPat (Ident "TOCKS")) (PrefixExp (Var (Ident "tock")) ([]) (Var (Ident "TOCKS")))) ((:) (PatBind (VarPat (Ident "Delayable")) (Closure ((:) (DotTuple ((:) (Var (Ident "enter")) ((:) (IntExp (1)) ([])))) ([])))) ((:) (PatBind (VarPat (Ident "NonTock")) (CallBuiltIn (BuiltIn (F_diff)) ((:) ((:) (Events) ((:) (SetEnum ((:) (Var (Ident "tock")) ([]))) ([]))) ([])))) ((:) (FunBind (Ident "TimingConsistency") ((:) (FunCase ((:) ((:) (VarPat (Ident "ts")) ((:) (VarPat (Ident "gs")) ([]))) ([])) (CallFunction (Var (Ident "explicate")) ((:) ((:) (Fun2 (BuiltIn (F_Hiding)) (ProcSharing (Var (Ident "Delayable")) (CallFunction (Var (Ident "System")) ((:) ((:) (Var (Ident "ts")) ((:) (Var (Ident "gs")) ([]))) ([]))) (CallFunction (Var (Ident "normalise")) ((:) ((:) (CallBuiltIn (BuiltIn (F_CHAOS)) ((:) ((:) (Var (Ident "Delayable")) ([])) ([]))) ([])) ([])))) (Var (Ident "NonTock"))) ([])) ([])))) ([]))) ((:) (AssertRef (Var (Ident "TOCKS")) "k" (CallFunction (Var (Ident "TimingConsistency")) ((:) ((:) (Var (Ident "NormalTrain")) ((:) (Var (Ident "NormalGate")) ([]))) ([])))) ((:) (FunBind (Ident "Liveness") ((:) (FunCase ((:) ((:) (VarPat (Ident "X")) ([])) ([])) (Let ((:) (PatBind (VarPat (Ident "Idle")) (Fun2 (BuiltIn (F_ExtChoice)) (PrefixExp (Var (Ident "tock")) ([]) (Var (Ident "Idle"))) (PrefixExp (Var (Ident "enter")) ((:) (OutComm (IntExp (1))) ((:) (InComm (WildCard)) ([]))) (CallFunction (Var (Ident "Busy")) ((:) ((:) (IntExp (1)) ([])) ([])))))) ((:) (FunBind (Ident "Busy") ((:) (FunCase ((:) ((:) (VarPat (Ident "n6")) ([])) ([])) (Fun2 (BuiltIn (F_ExtChoice)) (Fun2 (BuiltIn (F_ExtChoice)) (Fun2 (BuiltIn (F_ExtChoice)) (PrefixExp (Var (Ident "tock")) ([]) (CallFunction (Var (Ident "Busy")) ((:) ((:) (Var (Ident "n6")) ([])) ([])))) (PrefixExp (Var (Ident "enter")) ((:) (OutComm (IntExp (1))) ((:) (InComm (WildCard)) ([]))) (CallFunction (Var (Ident "Busy")) ((:) ((:) (Ifte (Fun2 (BuiltIn (F_LT)) (Var (Ident "n6")) (Var (Ident "GateSeg"))) (Parens (Fun2 (BuiltIn (F_Add)) (Var (Ident "n6")) (IntExp (1)))) (Var (Ident "n6"))) ([])) ([]))))) (PrefixExp (Var (Ident "leave")) ((:) (OutComm (Var (Ident "GateSeg"))) ((:) (InComm (WildCard)) ([]))) (Parens (Ifte (Fun2 (BuiltIn (F_Eq)) (Var (Ident "n6")) (IntExp (1))) (CallFunction (Var (Ident "UpBefore")) ((:) ((:) (Var (Ident "X")) ([])) ([]))) (CallFunction (Var (Ident "Busy")) ((:) ((:) (Fun2 (BuiltIn (F_Sub)) (Var (Ident "n6")) (IntExp (1))) ([])) ([]))))))) (PrefixExp (Var (Ident "gate")) ((:) (InComm (WildCard)) ([])) (CallFunction (Var (Ident "Busy")) ((:) ((:) (Var (Ident "n6")) ([])) ([])))))) ([]))) ((:) (FunBind (Ident "UpBefore") ((:) (FunCase ((:) ((:) (VarPat (Ident "m")) ([])) ([])) (Fun2 (BuiltIn (F_ExtChoice)) (Fun2 (BuiltIn (F_ExtChoice)) (Fun2 (BuiltIn (F_Guard)) (Fun2 (BuiltIn (F_NEq)) (Var (Ident "m")) (IntExp (0))) (PrefixExp (Var (Ident "tock")) ([]) (CallFunction (Var (Ident "UpBefore")) ((:) ((:) (Fun2 (BuiltIn (F_Sub)) (Var (Ident "m")) (IntExp (1))) ([])) ([]))))) (PrefixExp (Var (Ident "gate")) ((:) (InComm (VarPat (Ident "x5"))) ([])) (Parens (Ifte (Fun2 (BuiltIn (F_Eq)) (Var (Ident "x5")) (Var (Ident "up"))) (Var (Ident "Idle")) (CallFunction (Var (Ident "UpBefore")) ((:) ((:) (Var (Ident "m")) ([])) ([]))))))) (PrefixExp (Var (Ident "enter")) ((:) (OutComm (IntExp (1))) ((:) (InComm (WildCard)) ([]))) (CallFunction (Var (Ident "Busy")) ((:) ((:) (IntExp (1)) ([])) ([])))))) ([]))) ([])))) (Var (Ident "Idle")))) ([]))) ((:) (FunBind (Ident "GateLive") ((:) (FunCase ((:) ((:) (VarPat (Ident "X2")) ([])) ([])) (ProcSharing (Closure ((:) (Var (Ident "tock")) ((:) (Var (Ident "gate")) ((:) (DotTuple ((:) (Var (Ident "enter")) ((:) (IntExp (1)) ([])))) ((:) (DotTuple ((:) (Var (Ident "leave")) ((:) (Var (Ident "GateSeg")) ([])))) ([])))))) (CallFunction (Var (Ident "Liveness")) ((:) ((:) (Var (Ident "X2")) ([])) ([]))) (CallBuiltIn (BuiltIn (F_CHAOS)) ((:) ((:) (Events) ([])) ([]))))) ([]))) ((:) (AssertRef (CallFunction (Var (Ident "GateLive")) ((:) ((:) (IntExp (3)) ([])) ([]))) "k" (CallFunction (Var (Ident "System")) ((:) ((:) (Var (Ident "NormalTrain")) ((:) (Var (Ident "NormalGate")) ([]))) ([])))) ((:) (AssertRef (CallFunction (Var (Ident "GateLive")) ((:) ((:) (IntExp (2)) ([])) ([]))) "k" (CallFunction (Var (Ident "System")) ((:) ((:) (Var (Ident "NormalTrain")) ((:) (Var (Ident "NormalGate")) ([]))) ([])))) ((:) (AssertRef (CallFunction (Var (Ident "GateLive")) ((:) ((:) (IntExp (1)) ([])) ([]))) "k" (CallFunction (Var (Ident "System")) ((:) ((:) (Var (Ident "NormalTrain")) ((:) (Var (Ident "NormalGate")) ([]))) ([])))) ((:) (AssertRef (CallFunction (Var (Ident "GateLive")) ((:) ((:) (IntExp (3)) ([])) ([]))) "k" (CallFunction (Var (Ident "GateLive")) ((:) ((:) (IntExp (2)) ([])) ([])))) ([])))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (Nothing))