(Module ((:) (Channel ((:) (Ident "year1") ((:) (Ident "year2") ((:) (Ident "year3") ((:) (Ident "pass") ((:) (Ident "fail") ((:) (Ident "graduate") ((:) (Ident "present") ((:) (Ident "prize") ([]))))))))) (Nothing)) ((:) (PatBind (VarPat (Ident "S")) (Closure ((:) (Var (Ident "year1")) ((:) (Var (Ident "year2")) ((:) (Var (Ident "year3")) ((:) (Var (Ident "pass")) ((:) (Var (Ident "fail")) ((:) (Var (Ident "graduate")) ([]))))))))) ((:) (PatBind (VarPat (Ident "P")) (Closure ((:) (Var (Ident "pass")) ((:) (Var (Ident "present")) ([]))))) ((:) (PatBind (VarPat (Ident "C")) (Closure ((:) (Var (Ident "pass")) ((:) (Var (Ident "fail")) ((:) (Var (Ident "prize")) ([])))))) ((:) (PatBind (VarPat (Ident "STUDENT")) (PrefixExp (Var (Ident "year1")) ([]) (Parens (Fun2 (BuiltIn (F_ExtChoice)) (PrefixExp (Var (Ident "pass")) ([]) (Var (Ident "YEAR2"))) (PrefixExp (Var (Ident "fail")) ([]) (Var (Ident "STUDENT"))))))) ((:) (PatBind (VarPat (Ident "YEAR2")) (PrefixExp (Var (Ident "year2")) ([]) (Parens (Fun2 (BuiltIn (F_ExtChoice)) (PrefixExp (Var (Ident "pass")) ([]) (Var (Ident "YEAR3"))) (PrefixExp (Var (Ident "fail")) ([]) (Var (Ident "YEAR2"))))))) ((:) (PatBind (VarPat (Ident "YEAR3")) (PrefixExp (Var (Ident "year3")) ([]) (Parens (Fun2 (BuiltIn (F_ExtChoice)) (PrefixExp (Var (Ident "pass")) ([]) (PrefixExp (Var (Ident "graduate")) ([]) (Stop))) (PrefixExp (Var (Ident "fail")) ([]) (Var (Ident "YEAR3"))))))) ((:) (PatBind (VarPat (Ident "PARENT")) (PrefixExp (Var (Ident "pass")) ([]) (PrefixExp (Var (Ident "present")) ([]) (Var (Ident "PARENT"))))) ((:) (PatBind (VarPat (Ident "COLLEGE")) (Fun2 (BuiltIn (F_ExtChoice)) (PrefixExp (Var (Ident "fail")) ([]) (Stop)) (PrefixExp (Var (Ident "pass")) ([]) (Var (Ident "C1"))))) ((:) (PatBind (VarPat (Ident "C1")) (Fun2 (BuiltIn (F_ExtChoice)) (PrefixExp (Var (Ident "fail")) ([]) (Stop)) (PrefixExp (Var (Ident "pass")) ([]) (Var (Ident "C2"))))) ((:) (PatBind (VarPat (Ident "C2")) (Fun2 (BuiltIn (F_ExtChoice)) (PrefixExp (Var (Ident "fail")) ([]) (Stop)) (PrefixExp (Var (Ident "pass")) ([]) (PrefixExp (Var (Ident "prize")) ([]) (Stop))))) ((:) (PatBind (VarPat (Ident "SYSTEM")) (ProcAParallel (CallBuiltIn (BuiltIn (F_union)) ((:) ((:) (Var (Ident "S")) ((:) (Var (Ident "P")) ([]))) ([]))) (Var (Ident "C")) (Parens (ProcAParallel (Var (Ident "S")) (Var (Ident "P")) (Var (Ident "STUDENT")) (Var (Ident "PARENT")))) (Var (Ident "COLLEGE")))) ([]))))))))))))) (Nothing))