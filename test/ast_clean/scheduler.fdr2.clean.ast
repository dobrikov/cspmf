(Module ((:) (PatBind (VarPat (Ident "n")) (IntExp (5))) ((:) (Channel ((:) (Ident "start") ((:) (Ident "finish") ((:) (Ident "c") ([])))) (Just (TypeDot ((:) (SetClose ((,) (IntExp (0)) (Var (Ident "n")))) ([]))))) ((:) (FunBind (Ident "inc") ((:) (FunCase ((:) ((:) (VarPat (Ident "x")) ([])) ([])) (Fun2 (BuiltIn (F_Mod)) (Parens (Fun2 (BuiltIn (F_Add)) (Var (Ident "x")) (IntExp (1)))) (Parens (Fun2 (BuiltIn (F_Add)) (Var (Ident "n")) (IntExp (1)))))) ([]))) ((:) (FunBind (Ident "STARTCELL") ((:) (FunCase ((:) ((:) (VarPat (Ident "i")) ([])) ([])) (PrefixExp (Var (Ident "start")) ((:) (OutComm (Var (Ident "i"))) ([])) (PrefixExp (Var (Ident "c")) ((:) (OutComm (CallFunction (Var (Ident "inc")) ((:) ((:) (Var (Ident "i")) ([])) ([])))) ([])) (Parens (Fun2 (BuiltIn (F_ExtChoice)) (PrefixExp (Var (Ident "finish")) ((:) (OutComm (Var (Ident "i"))) ([])) (PrefixExp (Var (Ident "c")) ((:) (OutComm (Var (Ident "i"))) ([])) (CallFunction (Var (Ident "STARTCELL")) ((:) ((:) (Var (Ident "i")) ([])) ([]))))) (PrefixExp (Var (Ident "c")) ((:) (OutComm (Var (Ident "i"))) ([])) (PrefixExp (Var (Ident "finish")) ((:) (OutComm (Var (Ident "i"))) ([])) (CallFunction (Var (Ident "STARTCELL")) ((:) ((:) (Var (Ident "i")) ([])) ([])))))))))) ([]))) ((:) (FunBind (Ident "WAITCELL") ((:) (FunCase ((:) ((:) (VarPat (Ident "i2")) ([])) ([])) (PrefixExp (Var (Ident "c")) ((:) (OutComm (Var (Ident "i2"))) ([])) (CallFunction (Var (Ident "STARTCELL")) ((:) ((:) (Var (Ident "i2")) ([])) ([]))))) ([]))) ((:) (FunBind (Ident "CELL") ((:) (FunCase ((:) ((:) (VarPat (Ident "i3")) ([])) ([])) (Ifte (Fun2 (BuiltIn (F_Eq)) (Var (Ident "i3")) (IntExp (0))) (CallFunction (Var (Ident "STARTCELL")) ((:) ((:) (Var (Ident "i3")) ([])) ([]))) (CallFunction (Var (Ident "WAITCELL")) ((:) ((:) (Var (Ident "i3")) ([])) ([]))))) ([]))) ((:) (PatBind (VarPat (Ident "SCHED")) (Fun2 (BuiltIn (F_Hiding)) (Parens (ProcRepAParallel ((:) (Generator (VarPat (Ident "i4")) (SetClose ((,) (IntExp (0)) (Var (Ident "n"))))) ([])) (Closure ((:) (DotTuple ((:) (Var (Ident "start")) ((:) (Var (Ident "i4")) ([])))) ((:) (DotTuple ((:) (Var (Ident "finish")) ((:) (Var (Ident "i4")) ([])))) ((:) (DotTuple ((:) (Var (Ident "c")) ((:) (Var (Ident "i4")) ([])))) ((:) (DotTuple ((:) (Var (Ident "c")) ((:) (CallFunction (Var (Ident "inc")) ((:) ((:) (Var (Ident "i4")) ([])) ([]))) ([])))) ([])))))) (CallFunction (Var (Ident "CELL")) ((:) ((:) (Var (Ident "i4")) ([])) ([]))))) (Closure ((:) (Var (Ident "c")) ([]))))) ((:) (FunBind (Ident "ALT") ((:) (FunCase ((:) ((:) (VarPat (Ident "i5")) ([])) ([])) (PrefixExp (Var (Ident "start")) ((:) (OutComm (Var (Ident "i5"))) ([])) (PrefixExp (Var (Ident "finish")) ((:) (OutComm (Var (Ident "i5"))) ([])) (CallFunction (Var (Ident "ALT")) ((:) ((:) (Var (Ident "i5")) ([])) ([])))))) ([]))) ((:) (PatBind (VarPat (Ident "ALTSPEC")) (ProcRepAParallel ((:) (Generator (VarPat (Ident "i6")) (SetClose ((,) (IntExp (0)) (Var (Ident "n"))))) ([])) (Closure ((:) (DotTuple ((:) (Var (Ident "start")) ((:) (Var (Ident "i6")) ([])))) ((:) (DotTuple ((:) (Var (Ident "finish")) ((:) (Var (Ident "i6")) ([])))) ([])))) (CallFunction (Var (Ident "ALT")) ((:) ((:) (Var (Ident "i6")) ([])) ([]))))) ((:) (FunBind (Ident "CYCLE") ((:) (FunCase ((:) ((:) (VarPat (Ident "i7")) ([])) ([])) (PrefixExp (Var (Ident "start")) ((:) (OutComm (Var (Ident "i7"))) ([])) (CallFunction (Var (Ident "CYCLE")) ((:) ((:) (CallFunction (Var (Ident "inc")) ((:) ((:) (Var (Ident "i7")) ([])) ([]))) ([])) ([]))))) ([]))) ((:) (AssertRef (Var (Ident "ALTSPEC")) "k" (Var (Ident "SCHED"))) ((:) (AssertRef (CallFunction (Var (Ident "CYCLE")) ((:) ((:) (IntExp (0)) ([])) ([]))) "k" (Parens (Fun2 (BuiltIn (F_Hiding)) (Var (Ident "SCHED")) (Closure ((:) (Var (Ident "finish")) ([])))))) ((:) (FunBind (Ident "SCH") ((:) (FunCase ((:) ((:) (VarPat (Ident "s")) ((:) (VarPat (Ident "R")) ([]))) ([])) (Fun2 (BuiltIn (F_ExtChoice)) (Parens (Ifte (NotExp (Parens (Fun2 (BuiltIn (F_Eq)) (CallBuiltIn (BuiltIn (F_union)) ((:) ((:) (Var (Ident "R")) ((:) (SetEnum ((:) (Var (Ident "s")) ([]))) ([]))) ([]))) (Var (Ident "R"))))) (PrefixExp (Var (Ident "start")) ((:) (OutComm (Var (Ident "s"))) ([])) (CallFunction (Var (Ident "SCH")) ((:) ((:) (CallFunction (Var (Ident "inc")) ((:) ((:) (Var (Ident "s")) ([])) ([]))) ((:) (CallBuiltIn (BuiltIn (F_union)) ((:) ((:) (Var (Ident "R")) ((:) (SetEnum ((:) (Var (Ident "s")) ([]))) ([]))) ([]))) ([]))) ([])))) (Stop))) (Parens (ProcRepChoice ((:) (Generator (VarPat (Ident "i8")) (Var (Ident "R"))) ([])) (PrefixExp (Var (Ident "finish")) ((:) (OutComm (Var (Ident "i8"))) ([])) (CallFunction (Var (Ident "SCH")) ((:) ((:) (Var (Ident "s")) ((:) (CallBuiltIn (BuiltIn (F_diff)) ((:) ((:) (Var (Ident "R")) ((:) (SetEnum ((:) (Var (Ident "i8")) ([]))) ([]))) ([]))) ([]))) ([])))))))) ([]))) ((:) (PatBind (VarPat (Ident "NEWSCHED")) (CallFunction (Var (Ident "SCH")) ((:) ((:) (IntExp (0)) ((:) (SetEnum ([])) ([]))) ([])))) ((:) (AssertRef (Var (Ident "ALTSPEC")) "k" (Var (Ident "NEWSCHED"))) ((:) (AssertRef (CallFunction (Var (Ident "CYCLE")) ((:) ((:) (IntExp (0)) ([])) ([]))) "k" (Parens (Fun2 (BuiltIn (F_Hiding)) (Var (Ident "NEWSCHED")) (Closure ((:) (Var (Ident "finish")) ([])))))) ((:) (AssertRef (Var (Ident "SCHED")) "k" (Var (Ident "NEWSCHED"))) ((:) (AssertRef (Var (Ident "NEWSCHED")) "k" (Var (Ident "SCHED"))) ([]))))))))))))))))))) (Nothing))