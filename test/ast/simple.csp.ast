Labeled {label = TokSpan 5 94, unLabel = Module [Labeled {label = TokSpan 5 12, unLabel = DataType (Labeled {label = TokSpan 6 6, unLabel = Ident {unIdent = "FRUIT"}}) [Labeled {label = TokSpan 8 8, unLabel = Constructor (Labeled {label = TokSpan 8 8, unLabel = Ident {unIdent = "apples"}}) Nothing},Labeled {label = TokSpan 10 10, unLabel = Constructor (Labeled {label = TokSpan 10 10, unLabel = Ident {unIdent = "oranges"}}) Nothing},Labeled {label = TokSpan 12 12, unLabel = Constructor (Labeled {label = TokSpan 12 12, unLabel = Ident {unIdent = "pears"}}) Nothing}]},Labeled {label = TokSpan 14 21, unLabel = Channel [Labeled {label = TokSpan 15 15, unLabel = Ident {unIdent = "left"}},Labeled {label = TokSpan 17 17, unLabel = Ident {unIdent = "right"}},Labeled {label = TokSpan 19 19, unLabel = Ident {unIdent = "mid"}}] (Just (Labeled {label = TokSpan 21 21, unLabel = TypeDot [Labeled {label = TokSpan 21 21, unLabel = Var (Labeled {label = TokSpan 21 21, unLabel = Ident {unIdent = "FRUIT"}})}]}))},Labeled {label = TokSpan 22 23, unLabel = Channel [Labeled {label = TokSpan 23 23, unLabel = Ident {unIdent = "ack"}}] Nothing},Labeled {label = TokSpan 25 35, unLabel = PatBind (Labeled {label = TokSpan 25 25, unLabel = VarPat (Labeled {label = TokSpan 25 25, unLabel = Ident {unIdent = "COPY"}})}) (Labeled {label = TokSpan 27 35, unLabel = PrefixExp (Labeled {label = TokSpan 27 27, unLabel = Var (Labeled {label = TokSpan 27 27, unLabel = Ident {unIdent = "left"}})}) [Labeled {label = TokSpan 28 29, unLabel = InComm (Labeled {label = TokSpan 29 29, unLabel = VarPat (Labeled {label = TokSpan 29 29, unLabel = Ident {unIdent = "x"}})})}] (Labeled {label = TokSpan 31 35, unLabel = PrefixExp (Labeled {label = TokSpan 31 31, unLabel = Var (Labeled {label = TokSpan 31 31, unLabel = Ident {unIdent = "right"}})}) [Labeled {label = TokSpan 32 33, unLabel = OutComm (Labeled {label = TokSpan 33 33, unLabel = Var (Labeled {label = TokSpan 33 33, unLabel = Ident {unIdent = "x"}})})}] (Labeled {label = TokSpan 35 35, unLabel = Var (Labeled {label = TokSpan 35 35, unLabel = Ident {unIdent = "COPY"}})})})})},Labeled {label = TokSpan 38 50, unLabel = PatBind (Labeled {label = TokSpan 38 38, unLabel = VarPat (Labeled {label = TokSpan 38 38, unLabel = Ident {unIdent = "SEND"}})}) (Labeled {label = TokSpan 40 50, unLabel = PrefixExp (Labeled {label = TokSpan 40 40, unLabel = Var (Labeled {label = TokSpan 40 40, unLabel = Ident {unIdent = "left"}})}) [Labeled {label = TokSpan 41 42, unLabel = InComm (Labeled {label = TokSpan 42 42, unLabel = VarPat (Labeled {label = TokSpan 42 42, unLabel = Ident {unIdent = "x"}})})}] (Labeled {label = TokSpan 44 50, unLabel = PrefixExp (Labeled {label = TokSpan 44 44, unLabel = Var (Labeled {label = TokSpan 44 44, unLabel = Ident {unIdent = "mid"}})}) [Labeled {label = TokSpan 45 46, unLabel = OutComm (Labeled {label = TokSpan 46 46, unLabel = Var (Labeled {label = TokSpan 46 46, unLabel = Ident {unIdent = "x"}})})}] (Labeled {label = TokSpan 48 50, unLabel = PrefixExp (Labeled {label = TokSpan 48 48, unLabel = Var (Labeled {label = TokSpan 48 48, unLabel = Ident {unIdent = "ack"}})}) [] (Labeled {label = TokSpan 50 50, unLabel = Var (Labeled {label = TokSpan 50 50, unLabel = Ident {unIdent = "SEND"}})})})})})},Labeled {label = TokSpan 51 63, unLabel = PatBind (Labeled {label = TokSpan 51 51, unLabel = VarPat (Labeled {label = TokSpan 51 51, unLabel = Ident {unIdent = "REC"}})}) (Labeled {label = TokSpan 53 63, unLabel = PrefixExp (Labeled {label = TokSpan 53 53, unLabel = Var (Labeled {label = TokSpan 53 53, unLabel = Ident {unIdent = "mid"}})}) [Labeled {label = TokSpan 54 55, unLabel = InComm (Labeled {label = TokSpan 55 55, unLabel = VarPat (Labeled {label = TokSpan 55 55, unLabel = Ident {unIdent = "x"}})})}] (Labeled {label = TokSpan 57 63, unLabel = PrefixExp (Labeled {label = TokSpan 57 57, unLabel = Var (Labeled {label = TokSpan 57 57, unLabel = Ident {unIdent = "right"}})}) [Labeled {label = TokSpan 58 59, unLabel = OutComm (Labeled {label = TokSpan 59 59, unLabel = Var (Labeled {label = TokSpan 59 59, unLabel = Ident {unIdent = "x"}})})}] (Labeled {label = TokSpan 61 63, unLabel = PrefixExp (Labeled {label = TokSpan 61 61, unLabel = Var (Labeled {label = TokSpan 61 61, unLabel = Ident {unIdent = "ack"}})}) [] (Labeled {label = TokSpan 63 63, unLabel = Var (Labeled {label = TokSpan 63 63, unLabel = Ident {unIdent = "REC"}})})})})})},Labeled {label = TokSpan 65 83, unLabel = PatBind (Labeled {label = TokSpan 65 65, unLabel = VarPat (Labeled {label = TokSpan 65 65, unLabel = Ident {unIdent = "SYSTEM"}})}) (Labeled {label = TokPos 78, unLabel = Fun2 "\\" (Labeled {label = TokSpan 67 77, unLabel = Parens (Labeled {label = TokSpan 69 75, unLabel = Fun3 "sharing" (Labeled {label = TokSpan 70 74, unLabel = Closure [Labeled {label = TokSpan 71 71, unLabel = Var (Labeled {label = TokSpan 71 71, unLabel = Ident {unIdent = "mid"}})},Labeled {label = TokSpan 73 73, unLabel = Var (Labeled {label = TokSpan 73 73, unLabel = Ident {unIdent = "ack"}})}]}) (Labeled {label = TokSpan 68 68, unLabel = Var (Labeled {label = TokSpan 68 68, unLabel = Ident {unIdent = "SEND"}})}) (Labeled {label = TokSpan 76 76, unLabel = Var (Labeled {label = TokSpan 76 76, unLabel = Ident {unIdent = "REC"}})})})}) (Labeled {label = TokSpan 79 83, unLabel = Closure [Labeled {label = TokSpan 80 80, unLabel = Var (Labeled {label = TokSpan 80 80, unLabel = Ident {unIdent = "mid"}})},Labeled {label = TokSpan 82 82, unLabel = Var (Labeled {label = TokSpan 82 82, unLabel = Ident {unIdent = "ack"}})}]})})},Labeled {label = TokSpan 86 89, unLabel = AssertRef (Labeled {label = TokSpan 87 87, unLabel = Var (Labeled {label = TokSpan 87 87, unLabel = Ident {unIdent = "COPY"}})}) "[FD=" (Labeled {label = TokSpan 89 89, unLabel = Var (Labeled {label = TokSpan 89 89, unLabel = Ident {unIdent = "SYSTEM"}})})},Labeled {label = TokSpan 91 94, unLabel = AssertRef (Labeled {label = TokSpan 92 92, unLabel = Var (Labeled {label = TokSpan 92 92, unLabel = Ident {unIdent = "SYSTEM"}})}) "[FD=" (Labeled {label = TokSpan 94 94, unLabel = Var (Labeled {label = TokSpan 94 94, unLabel = Ident {unIdent = "COPY"}})})}]}
